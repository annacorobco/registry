
server {
	# listens both on IPv4 and IPv6
    listen 80;
    listen [::]:80;

    # `server name placeholder` will be replaced by ENV variable - HOST_NAME
    server_name  server_name_placeholder;

    location / {
        return  301 https://$server_name$request_uri;
    }

	# Open URI `/.well-known/acme-challenge` for renewing letsencrypt cert.
    include /etc/nginx/acme.challenge.*.conf;
}

server {
    # listens both on IPv4 and IPv6 on 443 and enables HTTPS support.
    listen 443 ssl;
    listen [::]:443 ssl;

    index index.php index.html index.htm;

    # webroot
    root /usr/share/nginx/www;

	# Load **SSL** related configurations - if existed.
	# The filename is like `ssl.example.com.conf``
    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;


	# Make site accessible from http://localhost/
	# `server name placeholder` will be replaced by ENV variable - HOST_NAME
	server_name .server_name_placeholder;

  location / {
      # Do not allow connections from docker 1.5 and earlier
      # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
      }

      proxy_pass                          http://registry:5000;
      proxy_set_header  Host              $http_host;   # required for docker client's sake
      proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_read_timeout                  900;
  }
}
